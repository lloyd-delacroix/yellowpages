#Load base contacts YAML
Contacts = YAML.load_file('./scripts/data/base-contacts.yaml')
Contacts = Contacts['contacts']

#DEBUG INFO
#puts "---Base Contacts---"
#puts Contacts.inspect
#puts Contacts.class

#Check for <CharName>-contacts.yaml file and merges it if exists
if File.exist?('./scripts/profiles/'+checkname+'-contacts.yaml')
	puts "Personal Contact file found! Now importing!"
	
	Personal_Contacts = YAML.load_file('./scripts/profiles/'+checkname+'-contacts.yaml')
	Personal_Contacts = Personal_Contacts['contacts']

	#DEBUG INFO
	#puts "---Personal Contacts---"
	#puts Personal_Contacts.inspect
	#puts Personal_Contacts.class

	Contacts.merge!(Personal_Contacts)
end

#DEBUG INFO
#puts "---Merged Contacts---"
#puts Contacts.inspect
#puts Contacts.class
#puts "-----"


arg_definitions = [
    [
    { name: 'search', regex: /[a-zA-Z]/, optional: false, description: 'Name of player to look up in contacts.' }
	]
]
args = parse_args(arg_definitions)

#DEBUG INFO
#puts args.search
#puts args.class

Record = Contacts[args.search]
if Record.nil?
	puts "User not found in contacts"
else
	#puts Record.inspect
	puts "Information for " + args.search
	puts " "
	puts "Guild: " + Record['guild'].inspect.gsub(/nil/,'')
	puts "Race: " + Record['race'].inspect.gsub(/nil/,'')
	puts "Circle: " + Record['circle'].inspect.to_s.gsub(/nil/,'')
	puts "Relationship: " + Record['relationship'].inspect.gsub(/nil/,'')
	puts "Notes: " + Record['notes'].inspect.gsub(/nil/,'')
	puts "Alts: " + Record['alts'].inspect.gsub(/nil/,'')
end